// Using float layout. Use this custom one rather than thrid party ones.
.row {
  max-width: $grid-width; // standard width
  margin: 0 auto; // center block element in viewport
  
  &:not(:last-child) { // Select everything except last child
    margin-bottom: $gutter-vertical;
  }

  @include clearfix; // Trick for giving height

  /* Attribute selector.
  Select all classes 'beginning with'(^) "col-".
  Select classes 'containing' uses *.
  Selecting classes that 'end with' uses $. 
  */
  [class^="col-"] { // DRY practice. Avoid adding common column just for these shared styles
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 { // ( entire width - gutter ) / 2
    // calc css function needs #{} for sass variables
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 { // (entire width - (two gutters)) divided by 3
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 { // ((.col-1-of-3 * 2) + gutter)
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 { // (entire width - (three gutters)) divided by 3
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc((2 * ((100% - 3 * #{$gutter-horizontal}) / 4)) + #{$gutter-horizontal});
  }

  .col-3-of-4 { // 1-of-4 + 2-of-4 + gutter
    width: calc(
      ((100% - 3 * #{$gutter-horizontal}) / 4) +
      ((2 * ((100% - 3 * #{$gutter-horizontal}) / 4)) + #{$gutter-horizontal}) +
      #{$gutter-horizontal}
    );
  }
}